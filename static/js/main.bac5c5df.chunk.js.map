{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Card","id","name","email","alt","src","CardList","cardsArray","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,qBAAKC,UAAY,MAAjB,SACC,uBACCA,UAAY,mCACZC,KAAK,SACLC,YAAc,gBACdC,SAAYJ,OCKDK,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACtB,OACC,sBAAKP,UAAY,mDAAjB,UACC,qBAAKQ,IAAM,SAASC,IAAG,+BAA0BJ,EAA1B,cACvB,gCACC,6BAAKC,IACL,4BAAIC,WCeOG,EAnBE,SAAC,GAAa,IAGxBC,EAHuB,EAAXC,OAGQC,KAAI,SAACC,EAAKC,GACnC,OACC,cAAC,EAAD,CACCV,GAAKS,EAAKT,GACVC,KAAOQ,EAAKR,KACZC,MAAQO,EAAKP,OAHFQ,MAOd,OACC,8BACKJ,KCRQK,EARA,SAACC,GACf,OACC,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAArE,SACEJ,EAAMK,YCiEKC,G,wDA5Dd,aAAc,IAAD,8BACZ,gBAgCDC,eAAiB,SAACC,GAEjB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SA7BzC,EAAKC,MAAQ,CACZlB,OAAQ,GACRe,YAAa,IARF,E,qDAab,WAAoB,IAAD,OAElBI,MAAM,8CACJC,MAAK,SAACC,GAEL,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACd,OAAOuB,S,oBAkBvC,WAAS,IAAD,EACuBC,KAAKN,MAA5BlB,EADA,EACAA,OAAQe,EADR,EACQA,YACTU,EAAiBzB,EAAO0B,QAC7B,SAACC,GACC,OAAOA,EAAMjC,KAAKkC,cAAcC,SAASd,EAAYa,kBAIxD,OAAQ5B,EAAO8B,OAEb,sBAAK1C,UAAY,KAAjB,UACC,oBAAIA,UAAW,KAAf,yBACA,cAAC,EAAD,CAAWD,aAAgBqC,KAAKZ,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUZ,OAAQyB,SANG,6C,GA/CTM,cCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bac5c5df.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\treturn (\r\n\t\t<div className = 'pa2'>\r\n\t\t\t<input \r\n\t\t\t\tclassName = 'pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder = 'Search Robots' \r\n\t\t\t\tonChange = {searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = ({id,name,email}) => {\r\n\treturn(\r\n\t\t<div className = 'bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt = 'robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport {robots} from '../robots';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) =>{\r\n\r\n\t//key olmazsa bir component silindiğinde DOM u baştan yüklemek zorunda kalıyor\r\n\tconst cardsArray = robots.map((user,i) => {\r\n\t\treturn (\r\n\t\t\t<Card key= {i}\r\n\t\t\t id= {user.id} \r\n\t\t\t name= {user.name} \r\n\t\t\t email= {user.email}\r\n\t\t\t/> \r\n\t\t)\r\n\t});\r\n\treturn(\r\n\t\t<div>\r\n\t\t    {cardsArray}\r\n\t    </div>  \r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\treturn (\r\n\t\t<div style = {{overflowY: 'scroll', border:'2px solid black', height:'500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport {robots} from '../robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll'\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\t/*this.state = {\r\n\t\t\trobots: robots,\r\n\t\t\tsearchField: ''\r\n\t\t}*/\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchField: ''\r\n\t\t}\r\n\t}\r\n\r\n\t//react hook\r\n\tcomponentDidMount(){\r\n\t\t//window.fetch\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then((response) => \r\n\t\t\t\t{\r\n\t\t\t\t\treturn response.json()\r\n\t\t\t\t})\r\n\t\t\t.then(users => this.setState({robots:users}));\r\n\t}\r\n\r\n\t// eğer bu fonksiyonu bu şekilde kullanırsak burdaki 'this' aslında input un this i oluyor\r\n\t/*onSearchChange(event){\r\n\t\tconst filteredRobots = this.state.robots.filter(\r\n\t\t\t(robot) => {\r\n\t\t\t\t return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase())\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\tconsole.log(filteredRobots);\r\n\t}*/\r\n\r\n\tonSearchChange = (event) =>{\r\n\r\n\t\tthis.setState({searchField: event.target.value});\t\t\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {robots, searchField} = this.state;\r\n\t\tconst filteredRobots = robots.filter(\r\n\t\t\t(robot) => {\r\n\t\t\t\t return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\treturn !robots.length ? (<h1>Loading</h1>) :\r\n\t\t(\t\t\t\r\n\t\t\t\t<div className = 'tc'>\r\n\t\t\t\t\t<h1 className= 'f1'>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange = {this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\t\r\n\t\t\t\t\r\n\t\t);\r\n\t}\t\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\n// export default değilse, yani birden  fazla varsa {}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  \t\t<App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}